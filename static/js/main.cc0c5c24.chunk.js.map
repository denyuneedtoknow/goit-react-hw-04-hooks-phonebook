{"version":3,"sources":["ContactForm/ContactForm.module.css","ContactList/ContactList.module.css","Filter/Filter.module.css","ContactList/ContactList.js","Filter/Filter.js","ContactForm/ContactForm.js","App.js","index.js"],"names":["module","exports","ContactList","contacts","handleBtn","map","contact","className","s","id","contactName","name","contactNumber","number","addBtn","onClick","Filter","data","handler","label","inputTitle","input","type","value","onChange","ContactForm","onSubmit","useState","setName","setNumber","setContact","handleChange","e","target","nameId","uuidv4","numberId","form","preventDefault","htmlFor","pattern","title","required","startingContacts","App","setContacts","filter","setFilter","useEffect","localStorage","getItem","listOfContacts","JSON","parse","setItem","stringify","loweredFilter","toLowerCase","filteredContacts","includes","obj","console","log","find","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc0c5c24.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__jeoBw\",\"label\":\"ContactForm_label__z-4lJ\",\"input\":\"ContactForm_input__jk_l0\",\"addBtn\":\"ContactForm_addBtn__2_IW-\",\"inputTitle\":\"ContactForm_inputTitle__16ev4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__ZQlue\",\"addBtn\":\"ContactList_addBtn__3dA_i\",\"contactName\":\"ContactList_contactName__3F05g\",\"contactNumber\":\"ContactList_contactNumber__hhp6l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1Lbhr\",\"inputTitle\":\"Filter_inputTitle__1Imd4\",\"input\":\"Filter_input__1RJpj\"};","import s from \"./ContactList.module.css\"\r\n\r\nexport default function ContactList({ contacts, handleBtn }) {\r\n  return (\r\n    <>\r\n      {contacts.map((contact) => (\r\n        <div className={s.contacts} key={contact.id}>\r\n          <p id={contact.id} className={s.contactName}>{contact.name}</p>\r\n          <p className={s.contactNumber}>{contact.number}</p>\r\n          <button className={s.addBtn} id={contact.id} onClick={handleBtn}>\r\n            Delete\r\n          </button>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n","import s from \"./Filter.module.css\"\r\n\r\nexport default function Filter({ data, handler }) {\r\n  return (\r\n    <label className={s.label}>\r\n      <p className={s.inputTitle}>Find</p>\r\n      <input className={s.input} type=\"text\" name=\"filter\" value={data} onChange={handler}></input>\r\n    </label>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport s from \"./ContactForm.module.css\"\r\n\r\n\r\n\r\n\r\nexport default function ContactForm({ contacts, onSubmit }) {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    const [contact, setContact] = useState('')\r\n    // const [updContacts, setUpdContacts] = useState(contacts)\r\n\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        switch (name) {\r\n            case 'name': setName(value);\r\n                break;\r\n            case 'number': setNumber(value);\r\n                break;\r\n            default: return\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const resetForm = () => {\r\n        setName('')\r\n        setNumber('')\r\n    };\r\n\r\n    // const onSubmitHandler = (e) => {\r\n    //     e.preventDefault();\r\n    //     setContact({ id: uuidv4(), name, number, })\r\n    //     setUpdContacts([...contacts.contacts, contact])\r\n    //     return updContacts\r\n    // };\r\n\r\n\r\n    const submit = e => {\r\n        e.preventDefault();\r\n        setContact({ id: uuidv4(), name, number, })\r\n        onSubmit({ name, number })\r\n        resetForm()\r\n    };\r\n\r\n\r\n    const nameId = uuidv4();\r\n    const numberId = uuidv4();\r\n    ;\r\n    return (<form className={s.form} onSubmit={submit}>\r\n        <label className={s.label} htmlFor={nameId}>\r\n            <p className={s.inputTitle}>Name</p>\r\n            <input className={s.input}\r\n                type=\"text\"\r\n                name=\"name\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                required\r\n                value={name}\r\n                id={nameId}\r\n                onChange={handleChange}\r\n            ></input>\r\n        </label>\r\n        <label className={s.label} htmlFor={numberId}>\r\n            <p className={s.inputTitle}>Phone</p>\r\n            <input className={s.input}\r\n                type=\"tel\"\r\n                name=\"number\"\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                required\r\n                value={number}\r\n                id={numberId}\r\n                onChange={handleChange}\r\n            ></input>\r\n        </label>\r\n        <button className={s.addBtn} type=\"submit\">Add contact</button>\r\n    </form>\r\n    )\r\n\r\n}","import { func } from \"prop-types\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport \"./App.css\";\r\nimport ContactList from \"./ContactList/ContactList\";\r\nimport Filter from \"./Filter/Filter\";\r\nimport ContactForm from \"./ContactForm/ContactForm\";\r\n\r\nconst startingContacts = [\r\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n]\r\n\r\n\r\n\r\nfunction App() {\r\n    const [contacts, setContacts] = useState(startingContacts)\r\n    const [filter, setFilter] = useState('')\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('contacts')) {\r\n            const listOfContacts = JSON.parse(localStorage.getItem('contacts'));\r\n            setContacts(listOfContacts);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('contacts', JSON.stringify(contacts));\r\n    }, [contacts]);\r\n\r\n    function handleSubmit({ name, number }) {\r\n        const obj = { id: uuidv4(), name, number }\r\n\r\n        console.log(obj);\r\n        const knownContact = contacts.find(contact => { return contact.name === obj.name })\r\n        if (knownContact) { return alert(`Sorry, contact ${obj.name} already existing`) }\r\n        else {\r\n            setContacts([...contacts, obj])\r\n\r\n        }\r\n        console.log(contacts);\r\n    }\r\n\r\n    const filterChange = (e) => {\r\n        setFilter(e.target.value)\r\n        console.log(filter);\r\n    };\r\n\r\n    const loweredFilter = filter.toLowerCase();\r\n\r\n    const filteredContacts = contacts.filter((contact) =>\r\n        contact.name.toLowerCase().includes(loweredFilter))\r\n\r\n\r\n    const handleBtn = (e) => {\r\n        console.log(e.target.id);\r\n        setContacts(contacts.filter(\r\n            (contact) => contact.id !== e.target.id\r\n        ))\r\n\r\n    };\r\n    return (\r\n        <div className=\"App\">\r\n            <h1>Phonebook</h1>\r\n            <ContactForm contacts={contacts} onSubmit={handleSubmit}></ContactForm>\r\n            <Filter data={filter} handler={filterChange}></Filter>\r\n            <h2>Contacts</h2>\r\n            <ContactList\r\n                contacts={filteredContacts}\r\n                handleBtn={handleBtn}\r\n            ></ContactList>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default App","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}